---
- name: python | check pyenv
  shell: which pyenv
  register: which_pyenv
  ignore_errors: yes

- name: python | install pyenv
  shell: anyenv install pyenv
  when: which_pyenv.rc > 0

- name: python | install plugins
  git:
    repo: 'https://github.com/{{ item }}.git'
    dest: '{{ python.plugins_dir }}/{{ item.split("/")[1] }}'
  with_items: '{{ python.plugins }}'
  when: python.plugins_dir and python.plugins

- name: python | get installed versions
  shell: pyenv versions
  register: installed_versions

- name: python | install python
  shell: pyenv install {{ item | quote }}
  args:
    executable: /bin/bash
  environment:
    PYTHON_CONFIGURE_OPTS: --enable-shared
  when: |
    python.versions and installed_versions.stdout.find(item) == -1
  with_items: '{{ python.versions }}'

- name: python | rehash
  shell: |
    if [ -f "$DOTSHIM_FILE" ]; then
      rm -f "$DOTSHIM_FILE"
    fi
    pyenv rehash
  environment:
    DOTSHIM_FILE: '{{ anyenv.envs_dir }}/pyenv/.pyenv-shim'

- name: python | check pipx
  shell: which pipx
  register: which_pipx
  ignore_errors: yes

- name: python | install pipx
  shell: python3 -m pip install --user pipx
  environment:
    PYENV_VERSION: system
  when: which_pipx.rc > 0

- name: python | install global CLI tools
  shell: pipsi install '{{ package.name | default(package) }}'
  with_items: '{{ python.packages }}'
  when: python.packages
  ignore_errors: yes
  loop_control:
    loop_var: package

- name: python | set global python
  shell: pyenv global {{ python.versions[0] | quote }}
  when: python.versions
