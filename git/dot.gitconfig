# Global gitconfig

# ============================================================================
# Formatting
# ============================================================================

[pretty]
	ld      = %C(yellow)%h %C(reset)%s %C(green)(%cr) %C(blue)<%an>%C(magenta)%d%C(reset)

# ============================================================================
# Aliases
# ============================================================================

[alias]
    co = checkout
    ci = commit
    st = status
    br = branch

    # `git remote prune origin`: remove remote-tracking branches that were deleted from the remote repo
    # `git gc`: cleanup unnecessary files and optimize the local repository
    trim = !git remote prune origin && git gc
    # `git clean -df`: remove untracked files and directories from the working tree
    # `git stash clear`: remove all stashed states
    cleanup = !git clean -df && git stash clear

    # Add all untracked, remove deleted
    all = add -A

    # Use the last commit message and amend your stuff
    amend = commit --amend -C HEAD

    # Show list of files in a conflict state.
    conflicts = !git ls-files -u | awk '{print $4}' | sort -u

    # Add untracked, remove deleted, and show status
    adda = !git add -A && git status

    # Show list of contributors sorted by line count
    contributors = --no-pager shortlog -s -n

    # Delete all local branches that have been merged into HEAD.
    delete-local-merged = branch -d `git branch --merged | grep -v '^*' | tr -d '\n'`

    # Undo your last commit, but don't throw away your changes
    undo = reset --soft HEAD^

    # Fetch a repository ($1) and checkout its ref ($2) HEAD
    # Use: `git browse https://github.com/necolas/dotfiles <commit-ish>`
    browse = !bash -c 'git fetch $1 ${2:-HEAD} && git checkout FETCH_HEAD' -

    # Diff what is staged for the next commit
    diffc = diff --cached
    # Diff overview
    diffst = diff --stat

    # Custom graph log (append any tree-ish)
    graph = log --pretty=nice --date-order --graph
    # Custom graph log for all branches
    grapha = log --pretty=nice --date-order --graph --all

    # Custom pretty log
    logp = log --pretty=nice --date-order

    # Diffstat log
    logst = log --stat
    # Short format diffstat log
    logsf = log --stat --format=oneline --abbrev-commit

    # Fetch and checkout a GitHub Pull Request from a remote (defaults to `origin`)
    # Use: `git gh-pr 123` or `git gh-pr 123 upstream`
    gh-pr = !bash -c 'git fetch -fu ${2:-origin} refs/pull/$1/head:gh-pr/$1 && git checkout gh-pr/$1' -

    # Find out who is currently active on the repository
    # Displays committers in descending order of number of commits
    who = shortlog --numbered --summary --email --no-merges --since="3 months"

# ============================================================================
# Color
# ============================================================================

[color]
  branch      = auto
  diff        = auto
  grep        = auto
  interactive = auto
  status      = auto
  ui          = auto
  pager       = true

[color "diff-highlight"]
  oldNormal    = red bold
  oldHighlight = red bold 52
  newNormal    = green bold
  newHighlight = green bold 22

# ============================================================================
# Repo settings and command options
# ============================================================================

[blame]
  date = short
  showEmail = true

[branch]
  autosetupmerge = always
  autosetuprebase = always
	sort = -committerdate

[commit]
    template = "~/.dotfiles/git/commit-template"

[core]
  compression = -1
# editor = "vim -f" ; removed so git will use env EDITOR or VISUAL
  sharedRepository = 0664
  commentchar = ";"
# pager = less -x4 ; removed so git will use the env GIT_PAGER
# pager = delta ; removed -- added as GIT_PAGER for zsh only
  ignorecase = false

[diff]
	algorithm = histogram
	colorMoved = plain
	compactionHeuristic = true
	renames = true
	renameLimit = 12650

[filter "media"]
	clean     = git media clean %f
	smudge    = git media smudge %f
	required  = true

[init]
	defaultBranch = main

[push]
	autoSetupRemote = true
  default = simple

[rebase]
	stat = true

[rerere]
	enabled = 1

[tag]
	sort = version:refname

[url "ssh://git@github.com/"]
	insteadOf = https://github.com/

# ============================================================================
# Programs (assumes may be overridden by OS settings)
# ============================================================================

[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f

[gui]
  commitmsgwidth = 80
  diffcontext = 10

[difftool]
  prompt = false

[mergetool]
  prompt = false

[pager]
  status = true

[hub]
	protocol = ssh

# ============================================================================
# User defaults (may be overridden by local)
# ============================================================================

[user]
  name = Pieter Robberechts
  email = pieter.robberechts@kuleuven.be

[credential]
  username = "probberechts"
	helper = store

[credential "https://git.overleaf.com"]
  username = "pieter.robberechts@cs.kuleuven.be"

# ============================================================================

[includeIf "gitdir:/Users/"]
  path = "~/.dotfiles/git/mac.gitconfig"

[include]
	path = "~/.local/share/ldotdir/gitconfig"

# vim: ft=gitconfig
